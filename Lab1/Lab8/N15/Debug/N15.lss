
N15.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00000b82  00000c16  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b82  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  0080013a  0080013a  00000c50  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c50  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000cac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000cec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009f9  00000000  00000000  00000d54  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007b7  00000000  00000000  0000174d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000471  00000000  00000000  00001f04  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000140  00000000  00000000  00002378  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000040b  00000000  00000000  000024b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000454  00000000  00000000  000028c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002d17  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__vector_7>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 a3 00 	jmp	0x146	; 0x146 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e8       	ldi	r30, 0x82	; 130
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 33       	cpi	r26, 0x3A	; 58
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e3       	ldi	r26, 0x3A	; 58
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 35       	cpi	r26, 0x54	; 84
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 67 01 	call	0x2ce	; 0x2ce <main>
  9e:	0c 94 bf 05 	jmp	0xb7e	; 0xb7e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_putchar>:
	UCSR0C = (1<<USBS0)|(1<<UCSZ01)|(1<<UCSZ00);
	stdout = &usart_out;
}


int uart_putchar(char c, FILE *stream){
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
	 if(c=='\n'){
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <uart_putchar+0xe>
		uart_putchar('\r', stream);
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <uart_putchar>
 }
// Wait for empty transmit buffer
while(!(UCSR0A & (1<<UDRE0)) );
  b4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  b8:	85 ff       	sbrs	r24, 5
  ba:	fc cf       	rjmp	.-8      	; 0xb4 <uart_putchar+0xe>
 UDR0=c;
  bc:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
return 0;
}
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	cf 91       	pop	r28
  c6:	08 95       	ret

000000c8 <__vector_7>:
#include <stdlib.h>
#include <util/delay.h>
#include <avr/interrupt.h>

uint64_t volatile __millis=0;
ISR (TIMER2_COMPA_vect){__millis++;}
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	2f 93       	push	r18
  d4:	3f 93       	push	r19
  d6:	4f 93       	push	r20
  d8:	5f 93       	push	r21
  da:	6f 93       	push	r22
  dc:	7f 93       	push	r23
  de:	8f 93       	push	r24
  e0:	9f 93       	push	r25
  e2:	af 93       	push	r26
  e4:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <__data_end>
  e8:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <__data_end+0x1>
  ec:	40 91 3c 01 	lds	r20, 0x013C	; 0x80013c <__data_end+0x2>
  f0:	50 91 3d 01 	lds	r21, 0x013D	; 0x80013d <__data_end+0x3>
  f4:	60 91 3e 01 	lds	r22, 0x013E	; 0x80013e <__data_end+0x4>
  f8:	70 91 3f 01 	lds	r23, 0x013F	; 0x80013f <__data_end+0x5>
  fc:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <__data_end+0x6>
 100:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <__data_end+0x7>
 104:	a1 e0       	ldi	r26, 0x01	; 1
 106:	0e 94 c0 02 	call	0x580	; 0x580 <__adddi3_s8>
 10a:	20 93 3a 01 	sts	0x013A, r18	; 0x80013a <__data_end>
 10e:	30 93 3b 01 	sts	0x013B, r19	; 0x80013b <__data_end+0x1>
 112:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <__data_end+0x2>
 116:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <__data_end+0x3>
 11a:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <__data_end+0x4>
 11e:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <__data_end+0x5>
 122:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__data_end+0x6>
 126:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <__data_end+0x7>
 12a:	af 91       	pop	r26
 12c:	9f 91       	pop	r25
 12e:	8f 91       	pop	r24
 130:	7f 91       	pop	r23
 132:	6f 91       	pop	r22
 134:	5f 91       	pop	r21
 136:	4f 91       	pop	r20
 138:	3f 91       	pop	r19
 13a:	2f 91       	pop	r18
 13c:	0f 90       	pop	r0
 13e:	0f be       	out	0x3f, r0	; 63
 140:	0f 90       	pop	r0
 142:	1f 90       	pop	r1
 144:	18 95       	reti

00000146 <__vector_18>:
int16_t  ref;
uint8_t  gain=1;
int uart_putchar(char c, FILE *stream);
FILE usart_out = FDEV_SETUP_STREAM(uart_putchar,NULL, _FDEV_SETUP_WRITE);

ISR(USART_RX_vect){
 146:	1f 92       	push	r1
 148:	0f 92       	push	r0
 14a:	0f b6       	in	r0, 0x3f	; 63
 14c:	0f 92       	push	r0
 14e:	11 24       	eor	r1, r1
 150:	8f 93       	push	r24
 152:	9f 93       	push	r25
	unsigned char status;
	cmd=UDR0;
 154:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <cmd+0x1>
 15e:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <cmd>
	status=UCSR0A; //read USART status.
 162:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
	//if error occur.
	if(status&((1<<FE0)|(1<<DOR0)|(1<<UPE0))){
 166:	8c 71       	andi	r24, 0x1C	; 28
 168:	31 f0       	breq	.+12     	; 0x176 <__vector_18+0x30>
		cmd=-1;
 16a:	8f ef       	ldi	r24, 0xFF	; 255
 16c:	9f ef       	ldi	r25, 0xFF	; 255
 16e:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <cmd+0x1>
 172:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <cmd>
		}else{ //no error
		//cmd is UDR0
	}
}
 176:	9f 91       	pop	r25
 178:	8f 91       	pop	r24
 17a:	0f 90       	pop	r0
 17c:	0f be       	out	0x3f, r0	; 63
 17e:	0f 90       	pop	r0
 180:	1f 90       	pop	r1
 182:	18 95       	reti

00000184 <init_timer2>:
void init_timer2(){
	TCCR2B=(1<<CS22); //System divided by 64 (CLK/64).
 184:	84 e0       	ldi	r24, 0x04	; 4
 186:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
	TCCR2A|=(1<<WGM21); //autoreload, TCNT2 reset to 0 when reaches OCR2A
 18a:	e0 eb       	ldi	r30, 0xB0	; 176
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	82 60       	ori	r24, 0x02	; 2
 192:	80 83       	st	Z, r24
	TIMSK2=(1<<OCIE2A); //enable interrupt.
 194:	82 e0       	ldi	r24, 0x02	; 2
 196:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>
	TIFR2=(1<<OCF2A); //clear flag
 19a:	87 bb       	out	0x17, r24	; 23
	TCNT2=0x00; //reset counter2
 19c:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
	OCR2A=249; //output compare register A (compare value)
 1a0:	89 ef       	ldi	r24, 0xF9	; 249
 1a2:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
 1a6:	08 95       	ret

000001a8 <motor_ccw>:
	//initialize timer2, interupt every (1/16000000)*64*1000*(249+1) = 1ms
}

void motor_ccw(){
	PORTC &= ~(1<<5);
 1a8:	88 b1       	in	r24, 0x08	; 8
 1aa:	8f 7d       	andi	r24, 0xDF	; 223
 1ac:	88 b9       	out	0x08, r24	; 8
	PORTC &= ~(1<<4);
 1ae:	88 b1       	in	r24, 0x08	; 8
 1b0:	8f 7e       	andi	r24, 0xEF	; 239
 1b2:	88 b9       	out	0x08, r24	; 8
	PORTC |= (1<<5);
 1b4:	88 b1       	in	r24, 0x08	; 8
 1b6:	80 62       	ori	r24, 0x20	; 32
 1b8:	88 b9       	out	0x08, r24	; 8
 1ba:	08 95       	ret

000001bc <motor_cw>:
}
void motor_cw(){
	
	PORTC &= ~(1<<5);
 1bc:	88 b1       	in	r24, 0x08	; 8
 1be:	8f 7d       	andi	r24, 0xDF	; 223
 1c0:	88 b9       	out	0x08, r24	; 8
	PORTC &= ~(1<<4);
 1c2:	88 b1       	in	r24, 0x08	; 8
 1c4:	8f 7e       	andi	r24, 0xEF	; 239
 1c6:	88 b9       	out	0x08, r24	; 8
	PORTC |= (1<<4);
 1c8:	88 b1       	in	r24, 0x08	; 8
 1ca:	80 61       	ori	r24, 0x10	; 16
 1cc:	88 b9       	out	0x08, r24	; 8
 1ce:	08 95       	ret

000001d0 <motor_stop>:
	
}
void motor_stop(){
	PORTC &= ~(1<<5);
 1d0:	88 b1       	in	r24, 0x08	; 8
 1d2:	8f 7d       	andi	r24, 0xDF	; 223
 1d4:	88 b9       	out	0x08, r24	; 8
	PORTC &= ~(1<<4);
 1d6:	88 b1       	in	r24, 0x08	; 8
 1d8:	8f 7e       	andi	r24, 0xEF	; 239
 1da:	88 b9       	out	0x08, r24	; 8
 1dc:	08 95       	ret

000001de <init_usart>:
}

void init_usart(unsigned long baud){
 1de:	9b 01       	movw	r18, r22
 1e0:	ac 01       	movw	r20, r24
	unsigned int ubrr;
	//Set baud rate, baud=Fosc/(8*(UBRR+1)) (2X mode)
	ubrr=(unsigned int)(F_CPU/8/baud)-1;
 1e2:	60 e8       	ldi	r22, 0x80	; 128
 1e4:	74 e8       	ldi	r23, 0x84	; 132
 1e6:	8e e1       	ldi	r24, 0x1E	; 30
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	0e 94 9e 02 	call	0x53c	; 0x53c <__udivmodsi4>
 1ee:	21 50       	subi	r18, 0x01	; 1
 1f0:	31 09       	sbc	r19, r1
	 UBRR0H = (unsigned char)(ubrr>>8); 
 1f2:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)ubrr;
 1f6:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	//Double the USART Transmission Speed
	UCSR0A = (1<<U2X0);
 1fa:	82 e0       	ldi	r24, 0x02	; 2
 1fc:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
	// Enable TX,RX and RX interrupt.
	UCSR0B = (1<<TXEN0)|(1<<RXEN0)|(1<<RXCIE0);
 200:	88 e9       	ldi	r24, 0x98	; 152
 202:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	//Set frame to 8data, 2stop bit
	UCSR0C = (1<<USBS0)|(1<<UCSZ01)|(1<<UCSZ00);
 206:	8e e0       	ldi	r24, 0x0E	; 14
 208:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	stdout = &usart_out;
 20c:	80 e0       	ldi	r24, 0x00	; 0
 20e:	91 e0       	ldi	r25, 0x01	; 1
 210:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <__iob+0x3>
 214:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__iob+0x2>
 218:	08 95       	ret

0000021a <action>:
 UDR0=c;
return 0;
}

void action(unsigned char c){
	switch(c){
 21a:	84 36       	cpi	r24, 0x64	; 100
 21c:	49 f0       	breq	.+18     	; 0x230 <action+0x16>
 21e:	18 f4       	brcc	.+6      	; 0x226 <action+0xc>
 220:	81 36       	cpi	r24, 0x61	; 97
 222:	a1 f0       	breq	.+40     	; 0x24c <action+0x32>
 224:	1e c0       	rjmp	.+60     	; 0x262 <action+0x48>
 226:	86 36       	cpi	r24, 0x66	; 102
 228:	51 f0       	breq	.+20     	; 0x23e <action+0x24>
 22a:	83 37       	cpi	r24, 0x73	; 115
 22c:	a9 f0       	breq	.+42     	; 0x258 <action+0x3e>
 22e:	19 c0       	rjmp	.+50     	; 0x262 <action+0x48>
		case 'd':
		ref = 300;
 230:	8c e2       	ldi	r24, 0x2C	; 44
 232:	91 e0       	ldi	r25, 0x01	; 1
 234:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <ref+0x1>
 238:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <ref>
		break;
 23c:	12 c0       	rjmp	.+36     	; 0x262 <action+0x48>
		case 'f':
		ref = 700;
 23e:	8c eb       	ldi	r24, 0xBC	; 188
 240:	92 e0       	ldi	r25, 0x02	; 2
 242:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <ref+0x1>
 246:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <ref>
		break;
 24a:	0b c0       	rjmp	.+22     	; 0x262 <action+0x48>
		case 'a':
		gain = gain+1;
 24c:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <gain>
 250:	8f 5f       	subi	r24, 0xFF	; 255
 252:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <gain>
		break;
 256:	05 c0       	rjmp	.+10     	; 0x262 <action+0x48>
		case 's':
		gain = gain-1;
 258:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <gain>
 25c:	81 50       	subi	r24, 0x01	; 1
 25e:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <gain>
		break;
	}
	ADCSRA|=(1<<ADSC); //Start
 262:	ea e7       	ldi	r30, 0x7A	; 122
 264:	f0 e0       	ldi	r31, 0x00	; 0
 266:	80 81       	ld	r24, Z
 268:	80 64       	ori	r24, 0x40	; 64
 26a:	80 83       	st	Z, r24
	while(!(ADCSRA&(1<<ADIF))){}; // see if ADC got information
 26c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 270:	84 ff       	sbrs	r24, 4
 272:	fc cf       	rjmp	.-8      	; 0x26c <action+0x52>
	ADCSRA|=(1<<ADIF); // clear flag after it completed.
 274:	ea e7       	ldi	r30, 0x7A	; 122
 276:	f0 e0       	ldi	r31, 0x00	; 0
 278:	80 81       	ld	r24, Z
 27a:	80 61       	ori	r24, 0x10	; 16
 27c:	80 83       	st	Z, r24
	printf("PWM=%d,Feed=%d,ref=%d,error=%d,gain=%d\n",(int)OCR0A ,(int)feedback ,(int)ref,(int)error,(int)gain);
 27e:	87 b5       	in	r24, 0x27	; 39
 280:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <gain>
 284:	1f 92       	push	r1
 286:	9f 93       	push	r25
 288:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <error+0x1>
 28c:	9f 93       	push	r25
 28e:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <error>
 292:	9f 93       	push	r25
 294:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <ref+0x1>
 298:	9f 93       	push	r25
 29a:	90 91 42 01 	lds	r25, 0x0142	; 0x800142 <ref>
 29e:	9f 93       	push	r25
 2a0:	e4 e4       	ldi	r30, 0x44	; 68
 2a2:	f1 e0       	ldi	r31, 0x01	; 1
 2a4:	91 81       	ldd	r25, Z+1	; 0x01
 2a6:	9f 93       	push	r25
 2a8:	90 81       	ld	r25, Z
 2aa:	9f 93       	push	r25
 2ac:	1f 92       	push	r1
 2ae:	8f 93       	push	r24
 2b0:	81 e1       	ldi	r24, 0x11	; 17
 2b2:	91 e0       	ldi	r25, 0x01	; 1
 2b4:	9f 93       	push	r25
 2b6:	8f 93       	push	r24
 2b8:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <printf>
	
}
 2bc:	8d b7       	in	r24, 0x3d	; 61
 2be:	9e b7       	in	r25, 0x3e	; 62
 2c0:	0c 96       	adiw	r24, 0x0c	; 12
 2c2:	0f b6       	in	r0, 0x3f	; 63
 2c4:	f8 94       	cli
 2c6:	9e bf       	out	0x3e, r25	; 62
 2c8:	0f be       	out	0x3f, r0	; 63
 2ca:	8d bf       	out	0x3d, r24	; 61
 2cc:	08 95       	ret

000002ce <main>:



int main(void){
 2ce:	cf 93       	push	r28
 2d0:	df 93       	push	r29
 2d2:	00 d0       	rcall	.+0      	; 0x2d4 <main+0x6>
 2d4:	00 d0       	rcall	.+0      	; 0x2d6 <main+0x8>
 2d6:	1f 92       	push	r1
 2d8:	cd b7       	in	r28, 0x3d	; 61
 2da:	de b7       	in	r29, 0x3e	; 62
	UCSR0B = (1<<RXEN0);
 2dc:	80 e1       	ldi	r24, 0x10	; 16
 2de:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	DDRC=0xFF;
 2e2:	8f ef       	ldi	r24, 0xFF	; 255
 2e4:	87 b9       	out	0x07, r24	; 7
	DDRD=0xFF;
 2e6:	8a b9       	out	0x0a, r24	; 10
	TCCR0B=(1<<CS02); // (clkI/O)/N*256 ;N=256 >> clk = 244.1Hz  (From prescaler)
 2e8:	84 e0       	ldi	r24, 0x04	; 4
 2ea:	85 bd       	out	0x25, r24	; 37
	TCCR0A=(1<<WGM01|1<<WGM00); // Fast PWM
 2ec:	83 e0       	ldi	r24, 0x03	; 3
 2ee:	84 bd       	out	0x24, r24	; 36
	//Enable OCR0A Output
	TCCR0A|=(1<<COM0A1);
 2f0:	84 b5       	in	r24, 0x24	; 36
 2f2:	80 68       	ori	r24, 0x80	; 128
 2f4:	84 bd       	out	0x24, r24	; 36
	TCNT0=0x00;// initialize values
 2f6:	16 bc       	out	0x26, r1	; 38
	TIMSK0=0x00;//no interrupt
 2f8:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	TIFR0=(1<<OCF0A);//clear OCR0A flag
 2fc:	82 e0       	ldi	r24, 0x02	; 2
 2fe:	85 bb       	out	0x15, r24	; 21
	//ADC
	ADCSRA|=(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0); // CLK/128 = 125kHz
 300:	ea e7       	ldi	r30, 0x7A	; 122
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	80 81       	ld	r24, Z
 306:	87 60       	ori	r24, 0x07	; 7
 308:	80 83       	st	Z, r24
	ADMUX|=(1<<REFS0); // AVCC AREF PIN WITH CAP,use ADC0
 30a:	ac e7       	ldi	r26, 0x7C	; 124
 30c:	b0 e0       	ldi	r27, 0x00	; 0
 30e:	8c 91       	ld	r24, X
 310:	80 64       	ori	r24, 0x40	; 64
 312:	8c 93       	st	X, r24
	ADCSRA|=(1<<ADEN);//enable ADC
 314:	80 81       	ld	r24, Z
 316:	80 68       	ori	r24, 0x80	; 128
 318:	80 83       	st	Z, r24
	//USART
	init_usart(115200);	
 31a:	60 e0       	ldi	r22, 0x00	; 0
 31c:	72 ec       	ldi	r23, 0xC2	; 194
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 ef 00 	call	0x1de	; 0x1de <init_usart>
	sei();
 326:	78 94       	sei
		uint64_t o_time2,n_time2;
		init_timer2();
 328:	0e 94 c2 00 	call	0x184	; 0x184 <init_timer2>
		o_time2=__millis;
 32c:	60 90 3a 01 	lds	r6, 0x013A	; 0x80013a <__data_end>
 330:	70 90 3b 01 	lds	r7, 0x013B	; 0x80013b <__data_end+0x1>
 334:	80 90 3c 01 	lds	r8, 0x013C	; 0x80013c <__data_end+0x2>
 338:	90 90 3d 01 	lds	r9, 0x013D	; 0x80013d <__data_end+0x3>
 33c:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <__data_end+0x4>
 340:	8c 83       	std	Y+4, r24	; 0x04
 342:	e0 91 3f 01 	lds	r30, 0x013F	; 0x80013f <__data_end+0x5>
 346:	eb 83       	std	Y+3, r30	; 0x03
 348:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <__data_end+0x6>
 34c:	89 83       	std	Y+1, r24	; 0x01
 34e:	e0 91 41 01 	lds	r30, 0x0141	; 0x800141 <__data_end+0x7>
 352:	ea 83       	std	Y+2, r30	; 0x02
		n_time2=__millis;
 354:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
 358:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <__data_end+0x1>
 35c:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <__data_end+0x2>
 360:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <__data_end+0x3>
 364:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <__data_end+0x4>
 368:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <__data_end+0x5>
 36c:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <__data_end+0x6>
 370:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__data_end+0x7>
		while(1){
			n_time2=__millis ;
 374:	20 90 3a 01 	lds	r2, 0x013A	; 0x80013a <__data_end>
 378:	30 90 3b 01 	lds	r3, 0x013B	; 0x80013b <__data_end+0x1>
 37c:	40 90 3c 01 	lds	r4, 0x013C	; 0x80013c <__data_end+0x2>
 380:	50 90 3d 01 	lds	r5, 0x013D	; 0x80013d <__data_end+0x3>
 384:	b0 91 3e 01 	lds	r27, 0x013E	; 0x80013e <__data_end+0x4>
 388:	a0 91 3f 01 	lds	r26, 0x013F	; 0x80013f <__data_end+0x5>
 38c:	f0 91 40 01 	lds	r31, 0x0140	; 0x800140 <__data_end+0x6>
 390:	e0 91 41 01 	lds	r30, 0x0141	; 0x800141 <__data_end+0x7>
 394:	ed 83       	std	Y+5, r30	; 0x05
			
			if(n_time2-o_time2>500){
 396:	22 2d       	mov	r18, r2
 398:	33 2d       	mov	r19, r3
 39a:	44 2d       	mov	r20, r4
 39c:	55 2d       	mov	r21, r5
 39e:	6b 2f       	mov	r22, r27
 3a0:	7a 2f       	mov	r23, r26
 3a2:	8f 2f       	mov	r24, r31
 3a4:	9e 2f       	mov	r25, r30
 3a6:	a6 2c       	mov	r10, r6
 3a8:	b7 2c       	mov	r11, r7
 3aa:	c8 2c       	mov	r12, r8
 3ac:	d9 2c       	mov	r13, r9
 3ae:	ec 80       	ldd	r14, Y+4	; 0x04
 3b0:	fb 80       	ldd	r15, Y+3	; 0x03
 3b2:	09 81       	ldd	r16, Y+1	; 0x01
 3b4:	1a 81       	ldd	r17, Y+2	; 0x02
 3b6:	0e 94 cc 02 	call	0x598	; 0x598 <__subdi3>
 3ba:	a2 2e       	mov	r10, r18
 3bc:	b3 2e       	mov	r11, r19
 3be:	c4 2e       	mov	r12, r20
 3c0:	d5 2e       	mov	r13, r21
 3c2:	e6 2e       	mov	r14, r22
 3c4:	f7 2e       	mov	r15, r23
 3c6:	08 2f       	mov	r16, r24
 3c8:	19 2f       	mov	r17, r25
 3ca:	24 3f       	cpi	r18, 0xF4	; 244
 3cc:	31 40       	sbci	r19, 0x01	; 1
 3ce:	41 05       	cpc	r20, r1
 3d0:	51 05       	cpc	r21, r1
 3d2:	61 05       	cpc	r22, r1
 3d4:	71 05       	cpc	r23, r1
 3d6:	81 05       	cpc	r24, r1
 3d8:	91 05       	cpc	r25, r1
 3da:	39 f0       	breq	.+14     	; 0x3ea <main+0x11c>
 3dc:	30 f0       	brcs	.+12     	; 0x3ea <main+0x11c>
				ref=200; 
 3de:	88 ec       	ldi	r24, 0xC8	; 200
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <ref+0x1>
 3e6:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <ref>
			}
			if(n_time2-o_time2>1000){
 3ea:	2a 2d       	mov	r18, r10
 3ec:	3b 2d       	mov	r19, r11
 3ee:	4c 2d       	mov	r20, r12
 3f0:	5d 2d       	mov	r21, r13
 3f2:	6e 2d       	mov	r22, r14
 3f4:	7f 2d       	mov	r23, r15
 3f6:	80 2f       	mov	r24, r16
 3f8:	91 2f       	mov	r25, r17
 3fa:	28 3e       	cpi	r18, 0xE8	; 232
 3fc:	33 40       	sbci	r19, 0x03	; 3
 3fe:	41 05       	cpc	r20, r1
 400:	51 05       	cpc	r21, r1
 402:	61 05       	cpc	r22, r1
 404:	71 05       	cpc	r23, r1
 406:	81 05       	cpc	r24, r1
 408:	91 05       	cpc	r25, r1
 40a:	81 f0       	breq	.+32     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 40c:	78 f0       	brcs	.+30     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
				ref =800;  
 40e:	80 e2       	ldi	r24, 0x20	; 32
 410:	93 e0       	ldi	r25, 0x03	; 3
 412:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <ref+0x1>
 416:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <ref>
				o_time2=n_time2;
 41a:	62 2c       	mov	r6, r2
 41c:	73 2c       	mov	r7, r3
 41e:	84 2c       	mov	r8, r4
 420:	95 2c       	mov	r9, r5
 422:	bc 83       	std	Y+4, r27	; 0x04
 424:	ab 83       	std	Y+3, r26	; 0x03
 426:	f9 83       	std	Y+1, r31	; 0x01
 428:	ed 81       	ldd	r30, Y+5	; 0x05
 42a:	ea 83       	std	Y+2, r30	; 0x02
			}
			if (0<=cmd)
 42c:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <cmd>
 430:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <cmd+0x1>
 434:	99 23       	and	r25, r25
 436:	64 f0       	brlt	.+24     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
			{
				action((unsigned char)cmd);
 438:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <cmd>
 43c:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <cmd+0x1>
 440:	0e 94 0d 01 	call	0x21a	; 0x21a <action>
				cmd = -1;
 444:	8f ef       	ldi	r24, 0xFF	; 255
 446:	9f ef       	ldi	r25, 0xFF	; 255
 448:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <cmd+0x1>
 44c:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <cmd>
				//read ADC and print
				
				//return 0;
			}
			//read ADC and print
			ADCSRA|=(1<<ADSC); //Start
 450:	ea e7       	ldi	r30, 0x7A	; 122
 452:	f0 e0       	ldi	r31, 0x00	; 0
 454:	80 81       	ld	r24, Z
 456:	80 64       	ori	r24, 0x40	; 64
 458:	80 83       	st	Z, r24
			while(!(ADCSRA&(1<<ADIF))){}; // see if ADC got information
 45a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 45e:	84 ff       	sbrs	r24, 4
 460:	fc cf       	rjmp	.-8      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
			ADCSRA|=(1<<ADIF); // clear flag after it completed.
 462:	ea e7       	ldi	r30, 0x7A	; 122
 464:	f0 e0       	ldi	r31, 0x00	; 0
 466:	80 81       	ld	r24, Z
 468:	80 61       	ori	r24, 0x10	; 16
 46a:	80 83       	st	Z, r24
			error = ref - ADC;
 46c:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 470:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 474:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <ref>
 478:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <ref+0x1>
 47c:	82 1b       	sub	r24, r18
 47e:	93 0b       	sbc	r25, r19
 480:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <error+0x1>
 484:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <error>
			feedback = gain * error;
 488:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <gain>
 48c:	48 9f       	mul	r20, r24
 48e:	90 01       	movw	r18, r0
 490:	49 9f       	mul	r20, r25
 492:	30 0d       	add	r19, r0
 494:	11 24       	eor	r1, r1
 496:	30 93 45 01 	sts	0x0145, r19	; 0x800145 <feedback+0x1>
 49a:	20 93 44 01 	sts	0x0144, r18	; 0x800144 <feedback>
 49e:	83 2f       	mov	r24, r19
 4a0:	88 0f       	add	r24, r24
 4a2:	88 0b       	sbc	r24, r24
 4a4:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <feedback+0x2>
 4a8:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <feedback+0x3>
 4ac:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <feedback+0x4>
 4b0:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <feedback+0x5>
 4b4:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <feedback+0x6>
 4b8:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <feedback+0x7>
			if (250<abs(feedback))
 4bc:	c9 01       	movw	r24, r18
 4be:	99 23       	and	r25, r25
 4c0:	24 f4       	brge	.+8      	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
 4c2:	88 27       	eor	r24, r24
 4c4:	99 27       	eor	r25, r25
 4c6:	82 1b       	sub	r24, r18
 4c8:	93 0b       	sbc	r25, r19
 4ca:	8b 3f       	cpi	r24, 0xFB	; 251
 4cc:	91 05       	cpc	r25, r1
 4ce:	1c f0       	brlt	.+6      	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
			OCR0A = 100;
 4d0:	84 e6       	ldi	r24, 0x64	; 100
 4d2:	87 bd       	out	0x27, r24	; 39
 4d4:	01 c0       	rjmp	.+2      	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
			else OCR0A =abs(feedback);
 4d6:	87 bd       	out	0x27, r24	; 39
			if(feedback<0){
 4d8:	d0 90 44 01 	lds	r13, 0x0144	; 0x800144 <feedback>
 4dc:	e0 90 45 01 	lds	r14, 0x0145	; 0x800145 <feedback+0x1>
 4e0:	f0 90 46 01 	lds	r15, 0x0146	; 0x800146 <feedback+0x2>
 4e4:	00 91 47 01 	lds	r16, 0x0147	; 0x800147 <feedback+0x3>
 4e8:	10 91 48 01 	lds	r17, 0x0148	; 0x800148 <feedback+0x4>
 4ec:	b0 91 49 01 	lds	r27, 0x0149	; 0x800149 <feedback+0x5>
 4f0:	f0 91 4a 01 	lds	r31, 0x014A	; 0x80014a <feedback+0x6>
 4f4:	e0 91 4b 01 	lds	r30, 0x014B	; 0x80014b <feedback+0x7>
 4f8:	2d 2d       	mov	r18, r13
 4fa:	3e 2d       	mov	r19, r14
 4fc:	4f 2d       	mov	r20, r15
 4fe:	50 2f       	mov	r21, r16
 500:	61 2f       	mov	r22, r17
 502:	7b 2f       	mov	r23, r27
 504:	8f 2f       	mov	r24, r31
 506:	9e 2f       	mov	r25, r30
 508:	a0 e0       	ldi	r26, 0x00	; 0
 50a:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__cmpdi2_s8>
 50e:	1c f4       	brge	.+6      	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
				motor_ccw();
 510:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <motor_ccw>
 514:	2f cf       	rjmp	.-418    	; 0x374 <main+0xa6>
			}
			else if(feedback>0){
 516:	2d 2d       	mov	r18, r13
 518:	3e 2d       	mov	r19, r14
 51a:	4f 2d       	mov	r20, r15
 51c:	50 2f       	mov	r21, r16
 51e:	61 2f       	mov	r22, r17
 520:	7b 2f       	mov	r23, r27
 522:	8f 2f       	mov	r24, r31
 524:	9e 2f       	mov	r25, r30
 526:	a0 e0       	ldi	r26, 0x00	; 0
 528:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__cmpdi2_s8>
 52c:	21 f0       	breq	.+8      	; 0x536 <__EEPROM_REGION_LENGTH__+0x136>
 52e:	1c f0       	brlt	.+6      	; 0x536 <__EEPROM_REGION_LENGTH__+0x136>
				motor_cw();
 530:	0e 94 de 00 	call	0x1bc	; 0x1bc <motor_cw>
 534:	1f cf       	rjmp	.-450    	; 0x374 <main+0xa6>
			}
			else {
				motor_stop();
 536:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <motor_stop>
 53a:	1c cf       	rjmp	.-456    	; 0x374 <main+0xa6>

0000053c <__udivmodsi4>:
 53c:	a1 e2       	ldi	r26, 0x21	; 33
 53e:	1a 2e       	mov	r1, r26
 540:	aa 1b       	sub	r26, r26
 542:	bb 1b       	sub	r27, r27
 544:	fd 01       	movw	r30, r26
 546:	0d c0       	rjmp	.+26     	; 0x562 <__udivmodsi4_ep>

00000548 <__udivmodsi4_loop>:
 548:	aa 1f       	adc	r26, r26
 54a:	bb 1f       	adc	r27, r27
 54c:	ee 1f       	adc	r30, r30
 54e:	ff 1f       	adc	r31, r31
 550:	a2 17       	cp	r26, r18
 552:	b3 07       	cpc	r27, r19
 554:	e4 07       	cpc	r30, r20
 556:	f5 07       	cpc	r31, r21
 558:	20 f0       	brcs	.+8      	; 0x562 <__udivmodsi4_ep>
 55a:	a2 1b       	sub	r26, r18
 55c:	b3 0b       	sbc	r27, r19
 55e:	e4 0b       	sbc	r30, r20
 560:	f5 0b       	sbc	r31, r21

00000562 <__udivmodsi4_ep>:
 562:	66 1f       	adc	r22, r22
 564:	77 1f       	adc	r23, r23
 566:	88 1f       	adc	r24, r24
 568:	99 1f       	adc	r25, r25
 56a:	1a 94       	dec	r1
 56c:	69 f7       	brne	.-38     	; 0x548 <__udivmodsi4_loop>
 56e:	60 95       	com	r22
 570:	70 95       	com	r23
 572:	80 95       	com	r24
 574:	90 95       	com	r25
 576:	9b 01       	movw	r18, r22
 578:	ac 01       	movw	r20, r24
 57a:	bd 01       	movw	r22, r26
 57c:	cf 01       	movw	r24, r30
 57e:	08 95       	ret

00000580 <__adddi3_s8>:
 580:	00 24       	eor	r0, r0
 582:	a7 fd       	sbrc	r26, 7
 584:	00 94       	com	r0
 586:	2a 0f       	add	r18, r26
 588:	30 1d       	adc	r19, r0
 58a:	40 1d       	adc	r20, r0
 58c:	50 1d       	adc	r21, r0
 58e:	60 1d       	adc	r22, r0
 590:	70 1d       	adc	r23, r0
 592:	80 1d       	adc	r24, r0
 594:	90 1d       	adc	r25, r0
 596:	08 95       	ret

00000598 <__subdi3>:
 598:	2a 19       	sub	r18, r10
 59a:	3b 09       	sbc	r19, r11
 59c:	4c 09       	sbc	r20, r12
 59e:	5d 09       	sbc	r21, r13
 5a0:	6e 09       	sbc	r22, r14
 5a2:	7f 09       	sbc	r23, r15
 5a4:	80 0b       	sbc	r24, r16
 5a6:	91 0b       	sbc	r25, r17
 5a8:	08 95       	ret

000005aa <__cmpdi2_s8>:
 5aa:	00 24       	eor	r0, r0
 5ac:	a7 fd       	sbrc	r26, 7
 5ae:	00 94       	com	r0
 5b0:	2a 17       	cp	r18, r26
 5b2:	30 05       	cpc	r19, r0
 5b4:	40 05       	cpc	r20, r0
 5b6:	50 05       	cpc	r21, r0
 5b8:	60 05       	cpc	r22, r0
 5ba:	70 05       	cpc	r23, r0
 5bc:	80 05       	cpc	r24, r0
 5be:	90 05       	cpc	r25, r0
 5c0:	08 95       	ret

000005c2 <printf>:
 5c2:	a0 e0       	ldi	r26, 0x00	; 0
 5c4:	b0 e0       	ldi	r27, 0x00	; 0
 5c6:	e7 ee       	ldi	r30, 0xE7	; 231
 5c8:	f2 e0       	ldi	r31, 0x02	; 2
 5ca:	0c 94 98 05 	jmp	0xb30	; 0xb30 <__prologue_saves__+0x20>
 5ce:	ae 01       	movw	r20, r28
 5d0:	4b 5f       	subi	r20, 0xFB	; 251
 5d2:	5f 4f       	sbci	r21, 0xFF	; 255
 5d4:	fa 01       	movw	r30, r20
 5d6:	61 91       	ld	r22, Z+
 5d8:	71 91       	ld	r23, Z+
 5da:	af 01       	movw	r20, r30
 5dc:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__iob+0x2>
 5e0:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <__iob+0x3>
 5e4:	0e 94 f7 02 	call	0x5ee	; 0x5ee <vfprintf>
 5e8:	e2 e0       	ldi	r30, 0x02	; 2
 5ea:	0c 94 b4 05 	jmp	0xb68	; 0xb68 <__epilogue_restores__+0x20>

000005ee <vfprintf>:
 5ee:	ab e0       	ldi	r26, 0x0B	; 11
 5f0:	b0 e0       	ldi	r27, 0x00	; 0
 5f2:	ed ef       	ldi	r30, 0xFD	; 253
 5f4:	f2 e0       	ldi	r31, 0x02	; 2
 5f6:	0c 94 88 05 	jmp	0xb10	; 0xb10 <__prologue_saves__>
 5fa:	6c 01       	movw	r12, r24
 5fc:	7b 01       	movw	r14, r22
 5fe:	8a 01       	movw	r16, r20
 600:	fc 01       	movw	r30, r24
 602:	17 82       	std	Z+7, r1	; 0x07
 604:	16 82       	std	Z+6, r1	; 0x06
 606:	83 81       	ldd	r24, Z+3	; 0x03
 608:	81 ff       	sbrs	r24, 1
 60a:	cc c1       	rjmp	.+920    	; 0x9a4 <__stack+0xa5>
 60c:	ce 01       	movw	r24, r28
 60e:	01 96       	adiw	r24, 0x01	; 1
 610:	3c 01       	movw	r6, r24
 612:	f6 01       	movw	r30, r12
 614:	93 81       	ldd	r25, Z+3	; 0x03
 616:	f7 01       	movw	r30, r14
 618:	93 fd       	sbrc	r25, 3
 61a:	85 91       	lpm	r24, Z+
 61c:	93 ff       	sbrs	r25, 3
 61e:	81 91       	ld	r24, Z+
 620:	7f 01       	movw	r14, r30
 622:	88 23       	and	r24, r24
 624:	09 f4       	brne	.+2      	; 0x628 <vfprintf+0x3a>
 626:	ba c1       	rjmp	.+884    	; 0x99c <__stack+0x9d>
 628:	85 32       	cpi	r24, 0x25	; 37
 62a:	39 f4       	brne	.+14     	; 0x63a <vfprintf+0x4c>
 62c:	93 fd       	sbrc	r25, 3
 62e:	85 91       	lpm	r24, Z+
 630:	93 ff       	sbrs	r25, 3
 632:	81 91       	ld	r24, Z+
 634:	7f 01       	movw	r14, r30
 636:	85 32       	cpi	r24, 0x25	; 37
 638:	29 f4       	brne	.+10     	; 0x644 <vfprintf+0x56>
 63a:	b6 01       	movw	r22, r12
 63c:	90 e0       	ldi	r25, 0x00	; 0
 63e:	0e 94 ee 04 	call	0x9dc	; 0x9dc <fputc>
 642:	e7 cf       	rjmp	.-50     	; 0x612 <vfprintf+0x24>
 644:	91 2c       	mov	r9, r1
 646:	21 2c       	mov	r2, r1
 648:	31 2c       	mov	r3, r1
 64a:	ff e1       	ldi	r31, 0x1F	; 31
 64c:	f3 15       	cp	r31, r3
 64e:	d8 f0       	brcs	.+54     	; 0x686 <vfprintf+0x98>
 650:	8b 32       	cpi	r24, 0x2B	; 43
 652:	79 f0       	breq	.+30     	; 0x672 <vfprintf+0x84>
 654:	38 f4       	brcc	.+14     	; 0x664 <vfprintf+0x76>
 656:	80 32       	cpi	r24, 0x20	; 32
 658:	79 f0       	breq	.+30     	; 0x678 <vfprintf+0x8a>
 65a:	83 32       	cpi	r24, 0x23	; 35
 65c:	a1 f4       	brne	.+40     	; 0x686 <vfprintf+0x98>
 65e:	23 2d       	mov	r18, r3
 660:	20 61       	ori	r18, 0x10	; 16
 662:	1d c0       	rjmp	.+58     	; 0x69e <vfprintf+0xb0>
 664:	8d 32       	cpi	r24, 0x2D	; 45
 666:	61 f0       	breq	.+24     	; 0x680 <vfprintf+0x92>
 668:	80 33       	cpi	r24, 0x30	; 48
 66a:	69 f4       	brne	.+26     	; 0x686 <vfprintf+0x98>
 66c:	23 2d       	mov	r18, r3
 66e:	21 60       	ori	r18, 0x01	; 1
 670:	16 c0       	rjmp	.+44     	; 0x69e <vfprintf+0xb0>
 672:	83 2d       	mov	r24, r3
 674:	82 60       	ori	r24, 0x02	; 2
 676:	38 2e       	mov	r3, r24
 678:	e3 2d       	mov	r30, r3
 67a:	e4 60       	ori	r30, 0x04	; 4
 67c:	3e 2e       	mov	r3, r30
 67e:	2a c0       	rjmp	.+84     	; 0x6d4 <vfprintf+0xe6>
 680:	f3 2d       	mov	r31, r3
 682:	f8 60       	ori	r31, 0x08	; 8
 684:	1d c0       	rjmp	.+58     	; 0x6c0 <vfprintf+0xd2>
 686:	37 fc       	sbrc	r3, 7
 688:	2d c0       	rjmp	.+90     	; 0x6e4 <vfprintf+0xf6>
 68a:	20 ed       	ldi	r18, 0xD0	; 208
 68c:	28 0f       	add	r18, r24
 68e:	2a 30       	cpi	r18, 0x0A	; 10
 690:	40 f0       	brcs	.+16     	; 0x6a2 <vfprintf+0xb4>
 692:	8e 32       	cpi	r24, 0x2E	; 46
 694:	b9 f4       	brne	.+46     	; 0x6c4 <vfprintf+0xd6>
 696:	36 fc       	sbrc	r3, 6
 698:	81 c1       	rjmp	.+770    	; 0x99c <__stack+0x9d>
 69a:	23 2d       	mov	r18, r3
 69c:	20 64       	ori	r18, 0x40	; 64
 69e:	32 2e       	mov	r3, r18
 6a0:	19 c0       	rjmp	.+50     	; 0x6d4 <vfprintf+0xe6>
 6a2:	36 fe       	sbrs	r3, 6
 6a4:	06 c0       	rjmp	.+12     	; 0x6b2 <vfprintf+0xc4>
 6a6:	8a e0       	ldi	r24, 0x0A	; 10
 6a8:	98 9e       	mul	r9, r24
 6aa:	20 0d       	add	r18, r0
 6ac:	11 24       	eor	r1, r1
 6ae:	92 2e       	mov	r9, r18
 6b0:	11 c0       	rjmp	.+34     	; 0x6d4 <vfprintf+0xe6>
 6b2:	ea e0       	ldi	r30, 0x0A	; 10
 6b4:	2e 9e       	mul	r2, r30
 6b6:	20 0d       	add	r18, r0
 6b8:	11 24       	eor	r1, r1
 6ba:	22 2e       	mov	r2, r18
 6bc:	f3 2d       	mov	r31, r3
 6be:	f0 62       	ori	r31, 0x20	; 32
 6c0:	3f 2e       	mov	r3, r31
 6c2:	08 c0       	rjmp	.+16     	; 0x6d4 <vfprintf+0xe6>
 6c4:	8c 36       	cpi	r24, 0x6C	; 108
 6c6:	21 f4       	brne	.+8      	; 0x6d0 <vfprintf+0xe2>
 6c8:	83 2d       	mov	r24, r3
 6ca:	80 68       	ori	r24, 0x80	; 128
 6cc:	38 2e       	mov	r3, r24
 6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <vfprintf+0xe6>
 6d0:	88 36       	cpi	r24, 0x68	; 104
 6d2:	41 f4       	brne	.+16     	; 0x6e4 <vfprintf+0xf6>
 6d4:	f7 01       	movw	r30, r14
 6d6:	93 fd       	sbrc	r25, 3
 6d8:	85 91       	lpm	r24, Z+
 6da:	93 ff       	sbrs	r25, 3
 6dc:	81 91       	ld	r24, Z+
 6de:	7f 01       	movw	r14, r30
 6e0:	81 11       	cpse	r24, r1
 6e2:	b3 cf       	rjmp	.-154    	; 0x64a <vfprintf+0x5c>
 6e4:	98 2f       	mov	r25, r24
 6e6:	9f 7d       	andi	r25, 0xDF	; 223
 6e8:	95 54       	subi	r25, 0x45	; 69
 6ea:	93 30       	cpi	r25, 0x03	; 3
 6ec:	28 f4       	brcc	.+10     	; 0x6f8 <vfprintf+0x10a>
 6ee:	0c 5f       	subi	r16, 0xFC	; 252
 6f0:	1f 4f       	sbci	r17, 0xFF	; 255
 6f2:	9f e3       	ldi	r25, 0x3F	; 63
 6f4:	99 83       	std	Y+1, r25	; 0x01
 6f6:	0d c0       	rjmp	.+26     	; 0x712 <vfprintf+0x124>
 6f8:	83 36       	cpi	r24, 0x63	; 99
 6fa:	31 f0       	breq	.+12     	; 0x708 <vfprintf+0x11a>
 6fc:	83 37       	cpi	r24, 0x73	; 115
 6fe:	71 f0       	breq	.+28     	; 0x71c <vfprintf+0x12e>
 700:	83 35       	cpi	r24, 0x53	; 83
 702:	09 f0       	breq	.+2      	; 0x706 <vfprintf+0x118>
 704:	59 c0       	rjmp	.+178    	; 0x7b8 <vfprintf+0x1ca>
 706:	21 c0       	rjmp	.+66     	; 0x74a <vfprintf+0x15c>
 708:	f8 01       	movw	r30, r16
 70a:	80 81       	ld	r24, Z
 70c:	89 83       	std	Y+1, r24	; 0x01
 70e:	0e 5f       	subi	r16, 0xFE	; 254
 710:	1f 4f       	sbci	r17, 0xFF	; 255
 712:	88 24       	eor	r8, r8
 714:	83 94       	inc	r8
 716:	91 2c       	mov	r9, r1
 718:	53 01       	movw	r10, r6
 71a:	13 c0       	rjmp	.+38     	; 0x742 <vfprintf+0x154>
 71c:	28 01       	movw	r4, r16
 71e:	f2 e0       	ldi	r31, 0x02	; 2
 720:	4f 0e       	add	r4, r31
 722:	51 1c       	adc	r5, r1
 724:	f8 01       	movw	r30, r16
 726:	a0 80       	ld	r10, Z
 728:	b1 80       	ldd	r11, Z+1	; 0x01
 72a:	36 fe       	sbrs	r3, 6
 72c:	03 c0       	rjmp	.+6      	; 0x734 <vfprintf+0x146>
 72e:	69 2d       	mov	r22, r9
 730:	70 e0       	ldi	r23, 0x00	; 0
 732:	02 c0       	rjmp	.+4      	; 0x738 <vfprintf+0x14a>
 734:	6f ef       	ldi	r22, 0xFF	; 255
 736:	7f ef       	ldi	r23, 0xFF	; 255
 738:	c5 01       	movw	r24, r10
 73a:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <strnlen>
 73e:	4c 01       	movw	r8, r24
 740:	82 01       	movw	r16, r4
 742:	f3 2d       	mov	r31, r3
 744:	ff 77       	andi	r31, 0x7F	; 127
 746:	3f 2e       	mov	r3, r31
 748:	16 c0       	rjmp	.+44     	; 0x776 <vfprintf+0x188>
 74a:	28 01       	movw	r4, r16
 74c:	22 e0       	ldi	r18, 0x02	; 2
 74e:	42 0e       	add	r4, r18
 750:	51 1c       	adc	r5, r1
 752:	f8 01       	movw	r30, r16
 754:	a0 80       	ld	r10, Z
 756:	b1 80       	ldd	r11, Z+1	; 0x01
 758:	36 fe       	sbrs	r3, 6
 75a:	03 c0       	rjmp	.+6      	; 0x762 <vfprintf+0x174>
 75c:	69 2d       	mov	r22, r9
 75e:	70 e0       	ldi	r23, 0x00	; 0
 760:	02 c0       	rjmp	.+4      	; 0x766 <vfprintf+0x178>
 762:	6f ef       	ldi	r22, 0xFF	; 255
 764:	7f ef       	ldi	r23, 0xFF	; 255
 766:	c5 01       	movw	r24, r10
 768:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <strnlen_P>
 76c:	4c 01       	movw	r8, r24
 76e:	f3 2d       	mov	r31, r3
 770:	f0 68       	ori	r31, 0x80	; 128
 772:	3f 2e       	mov	r3, r31
 774:	82 01       	movw	r16, r4
 776:	33 fc       	sbrc	r3, 3
 778:	1b c0       	rjmp	.+54     	; 0x7b0 <vfprintf+0x1c2>
 77a:	82 2d       	mov	r24, r2
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	88 16       	cp	r8, r24
 780:	99 06       	cpc	r9, r25
 782:	b0 f4       	brcc	.+44     	; 0x7b0 <vfprintf+0x1c2>
 784:	b6 01       	movw	r22, r12
 786:	80 e2       	ldi	r24, 0x20	; 32
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	0e 94 ee 04 	call	0x9dc	; 0x9dc <fputc>
 78e:	2a 94       	dec	r2
 790:	f4 cf       	rjmp	.-24     	; 0x77a <vfprintf+0x18c>
 792:	f5 01       	movw	r30, r10
 794:	37 fc       	sbrc	r3, 7
 796:	85 91       	lpm	r24, Z+
 798:	37 fe       	sbrs	r3, 7
 79a:	81 91       	ld	r24, Z+
 79c:	5f 01       	movw	r10, r30
 79e:	b6 01       	movw	r22, r12
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	0e 94 ee 04 	call	0x9dc	; 0x9dc <fputc>
 7a6:	21 10       	cpse	r2, r1
 7a8:	2a 94       	dec	r2
 7aa:	21 e0       	ldi	r18, 0x01	; 1
 7ac:	82 1a       	sub	r8, r18
 7ae:	91 08       	sbc	r9, r1
 7b0:	81 14       	cp	r8, r1
 7b2:	91 04       	cpc	r9, r1
 7b4:	71 f7       	brne	.-36     	; 0x792 <vfprintf+0x1a4>
 7b6:	e8 c0       	rjmp	.+464    	; 0x988 <__stack+0x89>
 7b8:	84 36       	cpi	r24, 0x64	; 100
 7ba:	11 f0       	breq	.+4      	; 0x7c0 <vfprintf+0x1d2>
 7bc:	89 36       	cpi	r24, 0x69	; 105
 7be:	41 f5       	brne	.+80     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 7c0:	f8 01       	movw	r30, r16
 7c2:	37 fe       	sbrs	r3, 7
 7c4:	07 c0       	rjmp	.+14     	; 0x7d4 <vfprintf+0x1e6>
 7c6:	60 81       	ld	r22, Z
 7c8:	71 81       	ldd	r23, Z+1	; 0x01
 7ca:	82 81       	ldd	r24, Z+2	; 0x02
 7cc:	93 81       	ldd	r25, Z+3	; 0x03
 7ce:	0c 5f       	subi	r16, 0xFC	; 252
 7d0:	1f 4f       	sbci	r17, 0xFF	; 255
 7d2:	08 c0       	rjmp	.+16     	; 0x7e4 <vfprintf+0x1f6>
 7d4:	60 81       	ld	r22, Z
 7d6:	71 81       	ldd	r23, Z+1	; 0x01
 7d8:	07 2e       	mov	r0, r23
 7da:	00 0c       	add	r0, r0
 7dc:	88 0b       	sbc	r24, r24
 7de:	99 0b       	sbc	r25, r25
 7e0:	0e 5f       	subi	r16, 0xFE	; 254
 7e2:	1f 4f       	sbci	r17, 0xFF	; 255
 7e4:	f3 2d       	mov	r31, r3
 7e6:	ff 76       	andi	r31, 0x6F	; 111
 7e8:	3f 2e       	mov	r3, r31
 7ea:	97 ff       	sbrs	r25, 7
 7ec:	09 c0       	rjmp	.+18     	; 0x800 <__DATA_REGION_LENGTH__>
 7ee:	90 95       	com	r25
 7f0:	80 95       	com	r24
 7f2:	70 95       	com	r23
 7f4:	61 95       	neg	r22
 7f6:	7f 4f       	sbci	r23, 0xFF	; 255
 7f8:	8f 4f       	sbci	r24, 0xFF	; 255
 7fa:	9f 4f       	sbci	r25, 0xFF	; 255
 7fc:	f0 68       	ori	r31, 0x80	; 128
 7fe:	3f 2e       	mov	r3, r31
 800:	2a e0       	ldi	r18, 0x0A	; 10
 802:	30 e0       	ldi	r19, 0x00	; 0
 804:	a3 01       	movw	r20, r6
 806:	0e 94 2a 05 	call	0xa54	; 0xa54 <__ultoa_invert>
 80a:	88 2e       	mov	r8, r24
 80c:	86 18       	sub	r8, r6
 80e:	45 c0       	rjmp	.+138    	; 0x89a <__DATA_REGION_LENGTH__+0x9a>
 810:	85 37       	cpi	r24, 0x75	; 117
 812:	31 f4       	brne	.+12     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 814:	23 2d       	mov	r18, r3
 816:	2f 7e       	andi	r18, 0xEF	; 239
 818:	b2 2e       	mov	r11, r18
 81a:	2a e0       	ldi	r18, 0x0A	; 10
 81c:	30 e0       	ldi	r19, 0x00	; 0
 81e:	25 c0       	rjmp	.+74     	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 820:	93 2d       	mov	r25, r3
 822:	99 7f       	andi	r25, 0xF9	; 249
 824:	b9 2e       	mov	r11, r25
 826:	8f 36       	cpi	r24, 0x6F	; 111
 828:	c1 f0       	breq	.+48     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 82a:	18 f4       	brcc	.+6      	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 82c:	88 35       	cpi	r24, 0x58	; 88
 82e:	79 f0       	breq	.+30     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 830:	b5 c0       	rjmp	.+362    	; 0x99c <__stack+0x9d>
 832:	80 37       	cpi	r24, 0x70	; 112
 834:	19 f0       	breq	.+6      	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 836:	88 37       	cpi	r24, 0x78	; 120
 838:	21 f0       	breq	.+8      	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 83a:	b0 c0       	rjmp	.+352    	; 0x99c <__stack+0x9d>
 83c:	e9 2f       	mov	r30, r25
 83e:	e0 61       	ori	r30, 0x10	; 16
 840:	be 2e       	mov	r11, r30
 842:	b4 fe       	sbrs	r11, 4
 844:	0d c0       	rjmp	.+26     	; 0x860 <__DATA_REGION_LENGTH__+0x60>
 846:	fb 2d       	mov	r31, r11
 848:	f4 60       	ori	r31, 0x04	; 4
 84a:	bf 2e       	mov	r11, r31
 84c:	09 c0       	rjmp	.+18     	; 0x860 <__DATA_REGION_LENGTH__+0x60>
 84e:	34 fe       	sbrs	r3, 4
 850:	0a c0       	rjmp	.+20     	; 0x866 <__DATA_REGION_LENGTH__+0x66>
 852:	29 2f       	mov	r18, r25
 854:	26 60       	ori	r18, 0x06	; 6
 856:	b2 2e       	mov	r11, r18
 858:	06 c0       	rjmp	.+12     	; 0x866 <__DATA_REGION_LENGTH__+0x66>
 85a:	28 e0       	ldi	r18, 0x08	; 8
 85c:	30 e0       	ldi	r19, 0x00	; 0
 85e:	05 c0       	rjmp	.+10     	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 860:	20 e1       	ldi	r18, 0x10	; 16
 862:	30 e0       	ldi	r19, 0x00	; 0
 864:	02 c0       	rjmp	.+4      	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 866:	20 e1       	ldi	r18, 0x10	; 16
 868:	32 e0       	ldi	r19, 0x02	; 2
 86a:	f8 01       	movw	r30, r16
 86c:	b7 fe       	sbrs	r11, 7
 86e:	07 c0       	rjmp	.+14     	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
 870:	60 81       	ld	r22, Z
 872:	71 81       	ldd	r23, Z+1	; 0x01
 874:	82 81       	ldd	r24, Z+2	; 0x02
 876:	93 81       	ldd	r25, Z+3	; 0x03
 878:	0c 5f       	subi	r16, 0xFC	; 252
 87a:	1f 4f       	sbci	r17, 0xFF	; 255
 87c:	06 c0       	rjmp	.+12     	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
 87e:	60 81       	ld	r22, Z
 880:	71 81       	ldd	r23, Z+1	; 0x01
 882:	80 e0       	ldi	r24, 0x00	; 0
 884:	90 e0       	ldi	r25, 0x00	; 0
 886:	0e 5f       	subi	r16, 0xFE	; 254
 888:	1f 4f       	sbci	r17, 0xFF	; 255
 88a:	a3 01       	movw	r20, r6
 88c:	0e 94 2a 05 	call	0xa54	; 0xa54 <__ultoa_invert>
 890:	88 2e       	mov	r8, r24
 892:	86 18       	sub	r8, r6
 894:	fb 2d       	mov	r31, r11
 896:	ff 77       	andi	r31, 0x7F	; 127
 898:	3f 2e       	mov	r3, r31
 89a:	36 fe       	sbrs	r3, 6
 89c:	0d c0       	rjmp	.+26     	; 0x8b8 <__DATA_REGION_LENGTH__+0xb8>
 89e:	23 2d       	mov	r18, r3
 8a0:	2e 7f       	andi	r18, 0xFE	; 254
 8a2:	a2 2e       	mov	r10, r18
 8a4:	89 14       	cp	r8, r9
 8a6:	58 f4       	brcc	.+22     	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
 8a8:	34 fe       	sbrs	r3, 4
 8aa:	0b c0       	rjmp	.+22     	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
 8ac:	32 fc       	sbrc	r3, 2
 8ae:	09 c0       	rjmp	.+18     	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
 8b0:	83 2d       	mov	r24, r3
 8b2:	8e 7e       	andi	r24, 0xEE	; 238
 8b4:	a8 2e       	mov	r10, r24
 8b6:	05 c0       	rjmp	.+10     	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
 8b8:	b8 2c       	mov	r11, r8
 8ba:	a3 2c       	mov	r10, r3
 8bc:	03 c0       	rjmp	.+6      	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
 8be:	b8 2c       	mov	r11, r8
 8c0:	01 c0       	rjmp	.+2      	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
 8c2:	b9 2c       	mov	r11, r9
 8c4:	a4 fe       	sbrs	r10, 4
 8c6:	0f c0       	rjmp	.+30     	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
 8c8:	fe 01       	movw	r30, r28
 8ca:	e8 0d       	add	r30, r8
 8cc:	f1 1d       	adc	r31, r1
 8ce:	80 81       	ld	r24, Z
 8d0:	80 33       	cpi	r24, 0x30	; 48
 8d2:	21 f4       	brne	.+8      	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
 8d4:	9a 2d       	mov	r25, r10
 8d6:	99 7e       	andi	r25, 0xE9	; 233
 8d8:	a9 2e       	mov	r10, r25
 8da:	09 c0       	rjmp	.+18     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8dc:	a2 fe       	sbrs	r10, 2
 8de:	06 c0       	rjmp	.+12     	; 0x8ec <__DATA_REGION_LENGTH__+0xec>
 8e0:	b3 94       	inc	r11
 8e2:	b3 94       	inc	r11
 8e4:	04 c0       	rjmp	.+8      	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8e6:	8a 2d       	mov	r24, r10
 8e8:	86 78       	andi	r24, 0x86	; 134
 8ea:	09 f0       	breq	.+2      	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8ec:	b3 94       	inc	r11
 8ee:	a3 fc       	sbrc	r10, 3
 8f0:	11 c0       	rjmp	.+34     	; 0x914 <__stack+0x15>
 8f2:	a0 fe       	sbrs	r10, 0
 8f4:	06 c0       	rjmp	.+12     	; 0x902 <__stack+0x3>
 8f6:	b2 14       	cp	r11, r2
 8f8:	88 f4       	brcc	.+34     	; 0x91c <__stack+0x1d>
 8fa:	28 0c       	add	r2, r8
 8fc:	92 2c       	mov	r9, r2
 8fe:	9b 18       	sub	r9, r11
 900:	0e c0       	rjmp	.+28     	; 0x91e <__stack+0x1f>
 902:	b2 14       	cp	r11, r2
 904:	60 f4       	brcc	.+24     	; 0x91e <__stack+0x1f>
 906:	b6 01       	movw	r22, r12
 908:	80 e2       	ldi	r24, 0x20	; 32
 90a:	90 e0       	ldi	r25, 0x00	; 0
 90c:	0e 94 ee 04 	call	0x9dc	; 0x9dc <fputc>
 910:	b3 94       	inc	r11
 912:	f7 cf       	rjmp	.-18     	; 0x902 <__stack+0x3>
 914:	b2 14       	cp	r11, r2
 916:	18 f4       	brcc	.+6      	; 0x91e <__stack+0x1f>
 918:	2b 18       	sub	r2, r11
 91a:	02 c0       	rjmp	.+4      	; 0x920 <__stack+0x21>
 91c:	98 2c       	mov	r9, r8
 91e:	21 2c       	mov	r2, r1
 920:	a4 fe       	sbrs	r10, 4
 922:	10 c0       	rjmp	.+32     	; 0x944 <__stack+0x45>
 924:	b6 01       	movw	r22, r12
 926:	80 e3       	ldi	r24, 0x30	; 48
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	0e 94 ee 04 	call	0x9dc	; 0x9dc <fputc>
 92e:	a2 fe       	sbrs	r10, 2
 930:	17 c0       	rjmp	.+46     	; 0x960 <__stack+0x61>
 932:	a1 fc       	sbrc	r10, 1
 934:	03 c0       	rjmp	.+6      	; 0x93c <__stack+0x3d>
 936:	88 e7       	ldi	r24, 0x78	; 120
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	02 c0       	rjmp	.+4      	; 0x940 <__stack+0x41>
 93c:	88 e5       	ldi	r24, 0x58	; 88
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	b6 01       	movw	r22, r12
 942:	0c c0       	rjmp	.+24     	; 0x95c <__stack+0x5d>
 944:	8a 2d       	mov	r24, r10
 946:	86 78       	andi	r24, 0x86	; 134
 948:	59 f0       	breq	.+22     	; 0x960 <__stack+0x61>
 94a:	a1 fe       	sbrs	r10, 1
 94c:	02 c0       	rjmp	.+4      	; 0x952 <__stack+0x53>
 94e:	8b e2       	ldi	r24, 0x2B	; 43
 950:	01 c0       	rjmp	.+2      	; 0x954 <__stack+0x55>
 952:	80 e2       	ldi	r24, 0x20	; 32
 954:	a7 fc       	sbrc	r10, 7
 956:	8d e2       	ldi	r24, 0x2D	; 45
 958:	b6 01       	movw	r22, r12
 95a:	90 e0       	ldi	r25, 0x00	; 0
 95c:	0e 94 ee 04 	call	0x9dc	; 0x9dc <fputc>
 960:	89 14       	cp	r8, r9
 962:	38 f4       	brcc	.+14     	; 0x972 <__stack+0x73>
 964:	b6 01       	movw	r22, r12
 966:	80 e3       	ldi	r24, 0x30	; 48
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	0e 94 ee 04 	call	0x9dc	; 0x9dc <fputc>
 96e:	9a 94       	dec	r9
 970:	f7 cf       	rjmp	.-18     	; 0x960 <__stack+0x61>
 972:	8a 94       	dec	r8
 974:	f3 01       	movw	r30, r6
 976:	e8 0d       	add	r30, r8
 978:	f1 1d       	adc	r31, r1
 97a:	80 81       	ld	r24, Z
 97c:	b6 01       	movw	r22, r12
 97e:	90 e0       	ldi	r25, 0x00	; 0
 980:	0e 94 ee 04 	call	0x9dc	; 0x9dc <fputc>
 984:	81 10       	cpse	r8, r1
 986:	f5 cf       	rjmp	.-22     	; 0x972 <__stack+0x73>
 988:	22 20       	and	r2, r2
 98a:	09 f4       	brne	.+2      	; 0x98e <__stack+0x8f>
 98c:	42 ce       	rjmp	.-892    	; 0x612 <vfprintf+0x24>
 98e:	b6 01       	movw	r22, r12
 990:	80 e2       	ldi	r24, 0x20	; 32
 992:	90 e0       	ldi	r25, 0x00	; 0
 994:	0e 94 ee 04 	call	0x9dc	; 0x9dc <fputc>
 998:	2a 94       	dec	r2
 99a:	f6 cf       	rjmp	.-20     	; 0x988 <__stack+0x89>
 99c:	f6 01       	movw	r30, r12
 99e:	86 81       	ldd	r24, Z+6	; 0x06
 9a0:	97 81       	ldd	r25, Z+7	; 0x07
 9a2:	02 c0       	rjmp	.+4      	; 0x9a8 <__stack+0xa9>
 9a4:	8f ef       	ldi	r24, 0xFF	; 255
 9a6:	9f ef       	ldi	r25, 0xFF	; 255
 9a8:	2b 96       	adiw	r28, 0x0b	; 11
 9aa:	e2 e1       	ldi	r30, 0x12	; 18
 9ac:	0c 94 a4 05 	jmp	0xb48	; 0xb48 <__epilogue_restores__>

000009b0 <strnlen_P>:
 9b0:	fc 01       	movw	r30, r24
 9b2:	05 90       	lpm	r0, Z+
 9b4:	61 50       	subi	r22, 0x01	; 1
 9b6:	70 40       	sbci	r23, 0x00	; 0
 9b8:	01 10       	cpse	r0, r1
 9ba:	d8 f7       	brcc	.-10     	; 0x9b2 <strnlen_P+0x2>
 9bc:	80 95       	com	r24
 9be:	90 95       	com	r25
 9c0:	8e 0f       	add	r24, r30
 9c2:	9f 1f       	adc	r25, r31
 9c4:	08 95       	ret

000009c6 <strnlen>:
 9c6:	fc 01       	movw	r30, r24
 9c8:	61 50       	subi	r22, 0x01	; 1
 9ca:	70 40       	sbci	r23, 0x00	; 0
 9cc:	01 90       	ld	r0, Z+
 9ce:	01 10       	cpse	r0, r1
 9d0:	d8 f7       	brcc	.-10     	; 0x9c8 <strnlen+0x2>
 9d2:	80 95       	com	r24
 9d4:	90 95       	com	r25
 9d6:	8e 0f       	add	r24, r30
 9d8:	9f 1f       	adc	r25, r31
 9da:	08 95       	ret

000009dc <fputc>:
 9dc:	0f 93       	push	r16
 9de:	1f 93       	push	r17
 9e0:	cf 93       	push	r28
 9e2:	df 93       	push	r29
 9e4:	fb 01       	movw	r30, r22
 9e6:	23 81       	ldd	r18, Z+3	; 0x03
 9e8:	21 fd       	sbrc	r18, 1
 9ea:	03 c0       	rjmp	.+6      	; 0x9f2 <fputc+0x16>
 9ec:	8f ef       	ldi	r24, 0xFF	; 255
 9ee:	9f ef       	ldi	r25, 0xFF	; 255
 9f0:	2c c0       	rjmp	.+88     	; 0xa4a <fputc+0x6e>
 9f2:	22 ff       	sbrs	r18, 2
 9f4:	16 c0       	rjmp	.+44     	; 0xa22 <fputc+0x46>
 9f6:	46 81       	ldd	r20, Z+6	; 0x06
 9f8:	57 81       	ldd	r21, Z+7	; 0x07
 9fa:	24 81       	ldd	r18, Z+4	; 0x04
 9fc:	35 81       	ldd	r19, Z+5	; 0x05
 9fe:	42 17       	cp	r20, r18
 a00:	53 07       	cpc	r21, r19
 a02:	44 f4       	brge	.+16     	; 0xa14 <fputc+0x38>
 a04:	a0 81       	ld	r26, Z
 a06:	b1 81       	ldd	r27, Z+1	; 0x01
 a08:	9d 01       	movw	r18, r26
 a0a:	2f 5f       	subi	r18, 0xFF	; 255
 a0c:	3f 4f       	sbci	r19, 0xFF	; 255
 a0e:	31 83       	std	Z+1, r19	; 0x01
 a10:	20 83       	st	Z, r18
 a12:	8c 93       	st	X, r24
 a14:	26 81       	ldd	r18, Z+6	; 0x06
 a16:	37 81       	ldd	r19, Z+7	; 0x07
 a18:	2f 5f       	subi	r18, 0xFF	; 255
 a1a:	3f 4f       	sbci	r19, 0xFF	; 255
 a1c:	37 83       	std	Z+7, r19	; 0x07
 a1e:	26 83       	std	Z+6, r18	; 0x06
 a20:	14 c0       	rjmp	.+40     	; 0xa4a <fputc+0x6e>
 a22:	8b 01       	movw	r16, r22
 a24:	ec 01       	movw	r28, r24
 a26:	fb 01       	movw	r30, r22
 a28:	00 84       	ldd	r0, Z+8	; 0x08
 a2a:	f1 85       	ldd	r31, Z+9	; 0x09
 a2c:	e0 2d       	mov	r30, r0
 a2e:	09 95       	icall
 a30:	89 2b       	or	r24, r25
 a32:	e1 f6       	brne	.-72     	; 0x9ec <fputc+0x10>
 a34:	d8 01       	movw	r26, r16
 a36:	16 96       	adiw	r26, 0x06	; 6
 a38:	8d 91       	ld	r24, X+
 a3a:	9c 91       	ld	r25, X
 a3c:	17 97       	sbiw	r26, 0x07	; 7
 a3e:	01 96       	adiw	r24, 0x01	; 1
 a40:	17 96       	adiw	r26, 0x07	; 7
 a42:	9c 93       	st	X, r25
 a44:	8e 93       	st	-X, r24
 a46:	16 97       	sbiw	r26, 0x06	; 6
 a48:	ce 01       	movw	r24, r28
 a4a:	df 91       	pop	r29
 a4c:	cf 91       	pop	r28
 a4e:	1f 91       	pop	r17
 a50:	0f 91       	pop	r16
 a52:	08 95       	ret

00000a54 <__ultoa_invert>:
 a54:	fa 01       	movw	r30, r20
 a56:	aa 27       	eor	r26, r26
 a58:	28 30       	cpi	r18, 0x08	; 8
 a5a:	51 f1       	breq	.+84     	; 0xab0 <__ultoa_invert+0x5c>
 a5c:	20 31       	cpi	r18, 0x10	; 16
 a5e:	81 f1       	breq	.+96     	; 0xac0 <__ultoa_invert+0x6c>
 a60:	e8 94       	clt
 a62:	6f 93       	push	r22
 a64:	6e 7f       	andi	r22, 0xFE	; 254
 a66:	6e 5f       	subi	r22, 0xFE	; 254
 a68:	7f 4f       	sbci	r23, 0xFF	; 255
 a6a:	8f 4f       	sbci	r24, 0xFF	; 255
 a6c:	9f 4f       	sbci	r25, 0xFF	; 255
 a6e:	af 4f       	sbci	r26, 0xFF	; 255
 a70:	b1 e0       	ldi	r27, 0x01	; 1
 a72:	3e d0       	rcall	.+124    	; 0xaf0 <__ultoa_invert+0x9c>
 a74:	b4 e0       	ldi	r27, 0x04	; 4
 a76:	3c d0       	rcall	.+120    	; 0xaf0 <__ultoa_invert+0x9c>
 a78:	67 0f       	add	r22, r23
 a7a:	78 1f       	adc	r23, r24
 a7c:	89 1f       	adc	r24, r25
 a7e:	9a 1f       	adc	r25, r26
 a80:	a1 1d       	adc	r26, r1
 a82:	68 0f       	add	r22, r24
 a84:	79 1f       	adc	r23, r25
 a86:	8a 1f       	adc	r24, r26
 a88:	91 1d       	adc	r25, r1
 a8a:	a1 1d       	adc	r26, r1
 a8c:	6a 0f       	add	r22, r26
 a8e:	71 1d       	adc	r23, r1
 a90:	81 1d       	adc	r24, r1
 a92:	91 1d       	adc	r25, r1
 a94:	a1 1d       	adc	r26, r1
 a96:	20 d0       	rcall	.+64     	; 0xad8 <__ultoa_invert+0x84>
 a98:	09 f4       	brne	.+2      	; 0xa9c <__ultoa_invert+0x48>
 a9a:	68 94       	set
 a9c:	3f 91       	pop	r19
 a9e:	2a e0       	ldi	r18, 0x0A	; 10
 aa0:	26 9f       	mul	r18, r22
 aa2:	11 24       	eor	r1, r1
 aa4:	30 19       	sub	r19, r0
 aa6:	30 5d       	subi	r19, 0xD0	; 208
 aa8:	31 93       	st	Z+, r19
 aaa:	de f6       	brtc	.-74     	; 0xa62 <__ultoa_invert+0xe>
 aac:	cf 01       	movw	r24, r30
 aae:	08 95       	ret
 ab0:	46 2f       	mov	r20, r22
 ab2:	47 70       	andi	r20, 0x07	; 7
 ab4:	40 5d       	subi	r20, 0xD0	; 208
 ab6:	41 93       	st	Z+, r20
 ab8:	b3 e0       	ldi	r27, 0x03	; 3
 aba:	0f d0       	rcall	.+30     	; 0xada <__ultoa_invert+0x86>
 abc:	c9 f7       	brne	.-14     	; 0xab0 <__ultoa_invert+0x5c>
 abe:	f6 cf       	rjmp	.-20     	; 0xaac <__ultoa_invert+0x58>
 ac0:	46 2f       	mov	r20, r22
 ac2:	4f 70       	andi	r20, 0x0F	; 15
 ac4:	40 5d       	subi	r20, 0xD0	; 208
 ac6:	4a 33       	cpi	r20, 0x3A	; 58
 ac8:	18 f0       	brcs	.+6      	; 0xad0 <__ultoa_invert+0x7c>
 aca:	49 5d       	subi	r20, 0xD9	; 217
 acc:	31 fd       	sbrc	r19, 1
 ace:	40 52       	subi	r20, 0x20	; 32
 ad0:	41 93       	st	Z+, r20
 ad2:	02 d0       	rcall	.+4      	; 0xad8 <__ultoa_invert+0x84>
 ad4:	a9 f7       	brne	.-22     	; 0xac0 <__ultoa_invert+0x6c>
 ad6:	ea cf       	rjmp	.-44     	; 0xaac <__ultoa_invert+0x58>
 ad8:	b4 e0       	ldi	r27, 0x04	; 4
 ada:	a6 95       	lsr	r26
 adc:	97 95       	ror	r25
 ade:	87 95       	ror	r24
 ae0:	77 95       	ror	r23
 ae2:	67 95       	ror	r22
 ae4:	ba 95       	dec	r27
 ae6:	c9 f7       	brne	.-14     	; 0xada <__ultoa_invert+0x86>
 ae8:	00 97       	sbiw	r24, 0x00	; 0
 aea:	61 05       	cpc	r22, r1
 aec:	71 05       	cpc	r23, r1
 aee:	08 95       	ret
 af0:	9b 01       	movw	r18, r22
 af2:	ac 01       	movw	r20, r24
 af4:	0a 2e       	mov	r0, r26
 af6:	06 94       	lsr	r0
 af8:	57 95       	ror	r21
 afa:	47 95       	ror	r20
 afc:	37 95       	ror	r19
 afe:	27 95       	ror	r18
 b00:	ba 95       	dec	r27
 b02:	c9 f7       	brne	.-14     	; 0xaf6 <__ultoa_invert+0xa2>
 b04:	62 0f       	add	r22, r18
 b06:	73 1f       	adc	r23, r19
 b08:	84 1f       	adc	r24, r20
 b0a:	95 1f       	adc	r25, r21
 b0c:	a0 1d       	adc	r26, r0
 b0e:	08 95       	ret

00000b10 <__prologue_saves__>:
 b10:	2f 92       	push	r2
 b12:	3f 92       	push	r3
 b14:	4f 92       	push	r4
 b16:	5f 92       	push	r5
 b18:	6f 92       	push	r6
 b1a:	7f 92       	push	r7
 b1c:	8f 92       	push	r8
 b1e:	9f 92       	push	r9
 b20:	af 92       	push	r10
 b22:	bf 92       	push	r11
 b24:	cf 92       	push	r12
 b26:	df 92       	push	r13
 b28:	ef 92       	push	r14
 b2a:	ff 92       	push	r15
 b2c:	0f 93       	push	r16
 b2e:	1f 93       	push	r17
 b30:	cf 93       	push	r28
 b32:	df 93       	push	r29
 b34:	cd b7       	in	r28, 0x3d	; 61
 b36:	de b7       	in	r29, 0x3e	; 62
 b38:	ca 1b       	sub	r28, r26
 b3a:	db 0b       	sbc	r29, r27
 b3c:	0f b6       	in	r0, 0x3f	; 63
 b3e:	f8 94       	cli
 b40:	de bf       	out	0x3e, r29	; 62
 b42:	0f be       	out	0x3f, r0	; 63
 b44:	cd bf       	out	0x3d, r28	; 61
 b46:	09 94       	ijmp

00000b48 <__epilogue_restores__>:
 b48:	2a 88       	ldd	r2, Y+18	; 0x12
 b4a:	39 88       	ldd	r3, Y+17	; 0x11
 b4c:	48 88       	ldd	r4, Y+16	; 0x10
 b4e:	5f 84       	ldd	r5, Y+15	; 0x0f
 b50:	6e 84       	ldd	r6, Y+14	; 0x0e
 b52:	7d 84       	ldd	r7, Y+13	; 0x0d
 b54:	8c 84       	ldd	r8, Y+12	; 0x0c
 b56:	9b 84       	ldd	r9, Y+11	; 0x0b
 b58:	aa 84       	ldd	r10, Y+10	; 0x0a
 b5a:	b9 84       	ldd	r11, Y+9	; 0x09
 b5c:	c8 84       	ldd	r12, Y+8	; 0x08
 b5e:	df 80       	ldd	r13, Y+7	; 0x07
 b60:	ee 80       	ldd	r14, Y+6	; 0x06
 b62:	fd 80       	ldd	r15, Y+5	; 0x05
 b64:	0c 81       	ldd	r16, Y+4	; 0x04
 b66:	1b 81       	ldd	r17, Y+3	; 0x03
 b68:	aa 81       	ldd	r26, Y+2	; 0x02
 b6a:	b9 81       	ldd	r27, Y+1	; 0x01
 b6c:	ce 0f       	add	r28, r30
 b6e:	d1 1d       	adc	r29, r1
 b70:	0f b6       	in	r0, 0x3f	; 63
 b72:	f8 94       	cli
 b74:	de bf       	out	0x3e, r29	; 62
 b76:	0f be       	out	0x3f, r0	; 63
 b78:	cd bf       	out	0x3d, r28	; 61
 b7a:	ed 01       	movw	r28, r26
 b7c:	08 95       	ret

00000b7e <_exit>:
 b7e:	f8 94       	cli

00000b80 <__stop_program>:
 b80:	ff cf       	rjmp	.-2      	; 0xb80 <__stop_program>
